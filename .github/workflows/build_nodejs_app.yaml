name: Build App
on: 
  workflow_call:
    inputs:
      HOSTNAME:
        required: true
        type: string
      FRONTEND_NAME: 
        required: true
        type: string
      DOMAIN_SETTINGS:
        required: true
        type: string
      DOMAIN_LOGIN:
        required: true
        type: string
      DOMAIN_PUBLISH:
        required: true
        type: string
      DOMAIN_ENGAGE:
        required: true
        type: string
      DOMAIN_MEASURE:
        required: true
        type: string
      SETTINGS_API:
        required: true
        type: string
      API:
        required: true
        type: string
      AUTH:
        required: true
        type: string
      PUBLISH:
        required: true
        type: string
      BACKEND_DOMAIN_SOCKET:
        required: true
        type: string
      BACKEND_DOMAIN_MEASURE:
        required: true
        type: string
      REDIRECT:
        required: true
        type: string
      NODE_VERSION:
        required: false
        type: string
        default: 7.6.0
    outputs:
      APP_NAME:
        value: ${{ jobs.build.outputs.APP_NAME }}
jobs:
  build:
    name: Application
    runs-on: ubuntu-latest
    outputs:
      APP_NAME: ${{ inputs.FRONTEND_NAME }}
    steps:     
      - name: Get Code
        uses: actions/checkout@v2

      - name: Setup NVM
        run: |
          export NVM_DIR="$HOME/.nvm"
          [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
          nvm install ${{ inputs.NODE_VERSION }}
          nvm use ${{ inputs.NODE_VERSION }}
          nvm install-latest-npm

      - name: Get npm cache directory
        id: npm-cache
        run: |
          export NVM_DIR="$HOME/.nvm"
          [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
          nvm use ${{ inputs.NODE_VERSION }}
          echo "::set-output name=dir::$(npm config get cache)"

      - name: Setup Cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.npm-cache.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-

      - name: Install packages
        run: |
          export NVM_DIR="$HOME/.nvm"
          [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
          nvm use ${{ inputs.NODE_VERSION }}
          npm install

      - name: Build Node ${{ inputs.NODE_VERSION }}
        run: |
          export NVM_DIR="$HOME/.nvm"
          [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
          nvm use ${{ inputs.NODE_VERSION }}
          if [[ ${{ inputs.NODE_VERSION }} != "7.6.0" ]]
          then
            npm run webpack-prod -- \
            --env hostname=https://${{ inputs.HOSTNAME }} \
            --env DOMAIN_SETTINGS=https://${{ inputs.DOMAIN_SETTINGS }} \
            --env DOMAIN_MEASURE=https://${{ inputs.DOMAIN_MEASURE }} \
            --env DOMAIN_LOGIN=https://${{ inputs.DOMAIN_LOGIN }} \
            --env DOMAIN_PUBLISH=https://${{ inputs.DOMAIN_PUBLISH }} \
            --env DOMAIN_ENGAGE=https://${{ inputs.DOMAIN_ENGAGE }} \
            --env SETTINGS_API=https://${{ inputs.SETTINGS_API }} \
            --env API=https://${{ inputs.API }} \
            --env AUTH=https://${{ inputs.AUTH }} \
            --env PUBLISH=https://${{ inputs.PUBLISH }} \
            --env BACKEND_DOMAIN_SOCKET=https://${{ inputs.BACKEND_DOMAIN_SOCKET }} \
            --env BACKEND_DOMAIN_MEASURE=https://${{ inputs.BACKEND_DOMAIN_MEASURE }} \
            --env DEFAULT_REDIRECTION=http://${{ inputs.REDIRECT }}
          elif [[ ${{ inputs.NODE_VERSION }} == "7.6.0" ]]
          then
            npm run webpack-prod -- \
            --env.hostname=https://${{ inputs.HOSTNAME }} \
            --env.DOMAIN_SETTINGS=https://${{ inputs.DOMAIN_SETTINGS }} \
            --env.DOMAIN_MEASURE=https://${{ inputs.DOMAIN_MEASURE }} \
            --env.DOMAIN_LOGIN=https://${{ inputs.DOMAIN_LOGIN }} \
            --env.DOMAIN_PUBLISH=https://${{ inputs.DOMAIN_PUBLISH }} \
            --env.DOMAIN_ENGAGE=https://${{ inputs.DOMAIN_ENGAGE }} \
            --env.SETTINGS_API=https://${{ inputs.SETTINGS_API }} \
            --env.API=https://${{ inputs.API }} \
            --env.AUTH=https://${{ inputs.AUTH }} \
            --env.PUBLISH=https://${{ inputs.PUBLISH }} \
            --env.BACKEND_DOMAIN_SOCKET=https://${{ inputs.BACKEND_DOMAIN_SOCKET }} \
            --env.BACKEND_DOMAIN_MEASURE=https://${{ inputs.BACKEND_DOMAIN_MEASURE }} \
            --env.DEFAULT_REDIRECTION=http://${{ inputs.REDIRECT }}
          fi
          zip -q -r www.zip www
          
      - name: Upload build to artificats
        uses: actions/upload-artifact@v2
        with:
          name: www
          path: ${{ github.workspace }}/www.zip

      - name: Upload deploy/deployment info
        uses: actions/upload-artifact@v2
        with:
          name: deploy
          path: ${{ github.workspace }}/deploy
